name: build & release
on:
  push:
    branches:
      - beta

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      tag: v${{ steps.version.outputs.value }}
    steps:
      - uses: actions/checkout@v3
       
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: version
        run: echo "::set-output name=value::$(node -p "require('./package.json').version")"
        id: version

      - name: appname
        id: appname
        run: echo "::set-output name=value::$(node -p "require('./package.json').name")"

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: ${{ steps.appname.outputs.value }} ${{ steps.version.outputs.value }}
          tag_name: v${{ steps.version.outputs.value }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-tauri:
  
    permissions:
      contents: write
    needs: [create-release]
    strategy:
      
      fail-fast: false
      matrix:
        targets:
          - platform: macos
            arch: x86_64-apple-darwin
          - platform: macos
            arch: aarch64-apple-darwin

          - platform: ubuntu
            arch: x86_64-unknown-linux-gnu
          - platform: ubuntu
            arch: aarch64-unknown-linux-gnu

          - platform: windows
            arch: x86_64-pc-windows-msvc
          - platform: windows
            arch: aarch64-pc-windows-msvc
            
    runs-on: ${{ matrix.targets.platform }}-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.targets.arch }}
        
      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./src-tauri
          key: ${{ matrix.targets.arch }}
        
      - name: install dependencies (ubuntu only)
        if: matrix.targets.platform == 'ubuntu'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: installation modules nodejs
        run: npm install
        
     # - name: vite build
     #   run : npx tauri build --target ${{ matrix.targets.arch }}
      
      - name: tauri build
        uses: liudonghua123/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --target ${{ matrix.targets.arch }}
          tagName: ${{needs.create-release.outputs.tag}}
