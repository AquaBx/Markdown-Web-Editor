// import md from 'markdown-it';
  // import hljs from 'highlight.js'
  // import mdhljs from 'markdown-it-highlightjs';
  // import mk from 'markdown-it-katex';
  // import mdemoji from 'markdown-it-emoji';const markdownit = md({
    html: true
  })
  .use(mdhljs, {
    auto: true,
    ignoreIllegals: true,
    code: true,
    inline: false,
    hljs
  })
  .use(mk, {
    displayMode: true,
    throwOnError: true,
    macros: {
      '\\(': '\\lparen',
      '\\)': '\\rparen',
      '\\{': '\\lbrace',
      '\\}': '\\rbrace',
      '\\[': '\\lbrack',
      '\\]': '\\rbrack',
      '\\n': '\\\\ \\ \\\\',
      '\\vec': '\\overrightarrow{#1}',
      '\\embrace': '\\left#2\\begin{split} #1 \\end{split}\\right#3',
      '\\aembrace': '\\embrace{#1}{\\{}{\\}}',
      '\\pembrace': '\\embrace{#1}{\\(}{\\)}',
      '\\cembrace': '\\embrace{#1}{\\[}{\\]}',
      '\\abs': '\\displaystyle\\left\\lvert{#1}\\right\\rvert',
    }
  })
  .use(mdemoji)
  .use(function underline(md) {
    function renderEm(tokens:any, idx:any, opts:any, _:any, slf:any) {
      let token = tokens[idx];
      if(token.markup === '_')
        token.tag = 'u';
      return slf.renderToken(tokens, idx, opts);
    }
    md.renderer.rules.em_open = renderEm;
    md.renderer.rules.em_close = renderEm;
  });