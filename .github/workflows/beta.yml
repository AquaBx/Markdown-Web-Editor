name: build & release
on:
  push:
    branches:
      - beta

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: get name
        run: echo "APP_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `${process.env.APP_NAME} ${process.env.PACKAGE_VERSION}`,
              body: '',
              draft: true,
              prerelease: true
            })
            return data.id
            
  build-tauri:
    permissions:
      contents: write
    
    needs: [create-release]
    
    strategy:
      fail-fast: false
      matrix:
        targets:
          - platform: macos
            arch: x86_64-apple-darwin
          - platform: macos
            arch: aarch64-apple-darwin

          - platform: ubuntu
            arch: x86_64-unknown-linux-gnu
          - platform: ubuntu
            arch: aarch64-unknown-linux-gnu

          - platform: windows
            arch: x86_64-pc-windows-msvc
          - platform: windows
            arch: aarch64-pc-windows-msvc
            
    runs-on: ${{ matrix.targets.platform }}-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.targets.arch }}
        
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
        
      - name: install dependencies (ubuntu only)
        if: matrix.targets.platform == 'ubuntu'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: installation modules nodejs
        run: npm install
        
      - name: vite build
        run : npm run build
      
      - name: tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: -t ${{ matrix.targets.arch }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [create-release,build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: true
            })
